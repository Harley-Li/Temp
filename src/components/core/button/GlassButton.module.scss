@use '../../../styles/glassmorphism.scss';

.glassButton {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 2.5rem;
  padding: 0 1.25rem;
  border-radius: 1.25rem;
  font-size: 0.875rem;
  font-family: "Fidelity Sans", Arial, sans-serif;
  font-weight: 600;
  line-height: 1;
  letter-spacing: 0.019rem;
  white-space: nowrap;
  transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1);
  cursor: pointer;
  user-select: none;
  outline: none;
  overflow: hidden;
  text-decoration: none;

  // Basic glass effect - as secondary style
  background: var(--glass-bg-primary);
  border: 0.0625rem solid var(--glass-border-medium);
  color: var(--glass-text-primary);
  box-shadow: var(--glass-shadow-sm);
  backdrop-filter: var(--glass-backdrop-filter);
  -webkit-backdrop-filter: var(--glass-backdrop-filter);

  // Hover effect
  &:hover {
    background: var(--glass-bg-hover);
    border-color: var(--glass-border-light);
    transform: translateY(-0.125rem);
    box-shadow: var(--glass-shadow-md);
  }

  // Click effect
  &:active {
    transform: translateY(0);
    box-shadow: var(--glass-shadow-sm);
    background: var(--glass-bg-active);
  }

  // Disabled state
  &.disabled {
    opacity: 0.5 !important;
    cursor: not-allowed !important;
    pointer-events: auto !important;
    box-shadow: none !important;
    border-color: var(--glass-border-medium) !important;
    background: var(--glass-bg-disabled, rgba(200, 200, 200, 0.2)) !important;
    
    &:hover,
    &:active {
      transform: translateY(0) !important;
      box-shadow: none !important;
      background: var(--glass-bg-disabled, rgba(200, 200, 200, 0.2)) !important;
    }
    
    &::after {
      display: none !important;
    }
  }

  // Button with icon
  &.withIcon {
    .icon {
      margin-right: 0.375rem;
      font-size: 1rem;
      display: flex;
      align-items: center;
      justify-content: center;
      filter: drop-shadow(0 0.0625rem 0.125rem rgba(0, 0, 0, 0.1));
    }
  }

  // Icon-only button - 2.5rem * 2.5rem circle
  &.iconOnly {
    width: 2.5rem;
    height: 2.5rem;
    padding: 0;
    border-radius: 50%; // Perfect circle

    .icon {
      margin-right: 0;
      font-size: 1.125rem;
    }
  }

  // Primary button variant
  &.primary {
    // Use same style as switcher slider
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.5) 100%);
    color: var(--glass-text-primary);
    border-color: rgba(255, 255, 255, 0.2);
    box-shadow:
      0 0.25rem 0.75rem rgba(0, 0, 0, 0.1),
      inset 0 -0.125rem 0.3125rem rgba(0, 0, 0, 0.05),
      inset 0 0.125rem 0.3125rem rgba(255, 255, 255, 0.5);

    &:hover {
      background: linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.6) 100%);
    }

    &:active {
      background: linear-gradient(135deg, rgba(240, 240, 240, 0.8) 0%, rgba(240, 240, 240, 0.5) 100%);
      box-shadow: 0 0.125rem 0.5rem rgba(0, 0, 0, 0.08);
    }
  }

  // Border button variant
  &.border {
    background: transparent;
    border: 0.5px solid var(--glass-text-primary);
    color: var(--glass-text-primary);
    box-shadow: none;

    &:hover {
      background: rgba(255, 255, 255, 0.05);
      border-color: var(--glass-text-primary);
    }

    &:active {
      background: rgba(0, 0, 0, 0.05);
    }
  }

  // Dark mode style adjustments
  [data-theme="dark"] & {
    // Text and icon color adjustments in dark mode
    color: var(--glass-text-primary);

    .icon {
      filter: drop-shadow(0 0.0625rem 0.125rem rgba(0, 0, 0, 0.2));
    }

    &.primary {
      // Match switcher slider style in dark mode
      background: linear-gradient(135deg, rgba(70, 85, 120, 0.8) 0%, rgba(60, 70, 100, 0.5) 100%);
      color: var(--glass-text-primary);
      font-weight: 400;

      &:hover {
        background: linear-gradient(135deg, rgba(70, 85, 120, 0.85) 0%, rgba(60, 70, 100, 0.55) 100%);
      }

      &:active {
        background: linear-gradient(135deg, rgba(60, 75, 110, 0.8) 0%, rgba(50, 60, 90, 0.5) 100%);
      }
    }

    &.secondary {
      color: var(--glass-text-secondary);
    }

    &.border {
      color: var(--glass-text-secondary);

      &:hover {
        color: var(--glass-text-primary);
      }
    }
  }

  // Glow effect
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0;
    background: radial-gradient(circle at center, rgba(255, 255, 255, 0.5) 0%, transparent 70%);
    transition: opacity 0.5s ease-out;
    pointer-events: none;
    border-radius: inherit;
  }

  &:hover::after {
    opacity: 0.6;
  }

  &:active::after {
    opacity: 0.3;
  }
}